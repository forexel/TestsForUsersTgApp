services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: tests_for_users
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - tests_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "tests_for_users", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ..
      dockerfile: api/Dockerfile
    env_file:
      - ./.env
    environment:
      APP_NAME: TestsForUsers API
      DATABASE_URL: postgresql+psycopg://postgres:postgres@db:5432/tests_for_users
      BOT_TOKEN: ${BOT_BOT_TOKEN:-}
      ADMIN_IDS: ${BOT_ADMIN_IDS:-}
      S3_ENDPOINT: ${S3_ENDPOINT:-http://minio:9000}
      S3_BUCKET: ${S3_BUCKET:-test-media}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY:-minioadmin}
      S3_SECRET_KEY: ${S3_SECRET_KEY:-minioadmin}
      S3_REGION: ${S3_REGION:-us-east-1}
      S3_USE_PATH_STYLE: ${S3_USE_PATH_STYLE:-true}
      S3_PUBLIC_BASE_URL: ${S3_PUBLIC_BASE_URL:-/s3/test-media}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: ["uvicorn", "api.app.main:app", "--host", "0.0.0.0", "--port", "8000", "--log-level", "debug"]

  migrator:
    build:
      context: ..
      dockerfile: api/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+psycopg://postgres:postgres@db:5432/tests_for_users
    command: ["alembic", "upgrade", "head"]

  bot:
    build:
      context: ../bot
      dockerfile: Dockerfile
    environment:
      BOT_BOT_TOKEN: ${BOT_BOT_TOKEN:-}
      BOT_API_BASE_URL: http://api:8000/api/v1
      BOT_WEBAPP_URL: ${BOT_WEBAPP_URL:-http://localhost:8080}
      BOT_ADMIN_IDS: ${BOT_ADMIN_IDS:-[]}
    depends_on:
      api:
        condition: service_started

  webapp:
    build:
      context: ../webapp
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-/api/v1}
        VITE_BOT_USERNAME: ${VITE_BOT_USERNAME:-your_bot_username}
        NGINX_CONF_VERSION: ${NGINX_CONF_VERSION:-20251005-1}
    depends_on:
      api:
        condition: service_started
    ports:
      - "8080:80"

  minio:
    image: minio/minio:RELEASE.2024-01-13T07-53-03Z
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY:-minioadmin}
    command: ["server", "/data", "--console-address", ":9001"]
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  minio-setup:
    image: minio/mc:latest
    depends_on:
      - minio
    environment:
      # configure alias "local" without running `mc alias set`
      MC_HOST_local: http://${S3_ACCESS_KEY:-minioadmin}:${S3_SECRET_KEY:-minioadmin}@minio:9000
    command: ["mb", "-p", "local/${S3_BUCKET:-test-media}"]

  minio-policy:
    image: minio/mc:latest
    depends_on:
      - minio
      - minio-setup
    environment:
      MC_HOST_local: http://${S3_ACCESS_KEY:-minioadmin}:${S3_SECRET_KEY:-minioadmin}@minio:9000
    command: ["anonymous", "set", "download", "local/${S3_BUCKET:-test-media}"]

volumes:
  tests_db_data:
    external: true
    name: deploy_db_data
  minio_data:
