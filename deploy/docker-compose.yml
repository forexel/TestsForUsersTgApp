name: testsforusers

services:
  api:
    build:
      context: ..
      dockerfile: api/Dockerfile
    env_file:
      - ./.env
    environment:
      APP_NAME: TestsForUsers API
      # БД из общей infra
      DATABASE_URL: postgresql+psycopg://postgres:postgres@db:5432/tests_for_users
      # S3/MinIO из общей infra
      S3_ENDPOINT: ${S3_ENDPOINT:-http://minio:9000}
      S3_BUCKET: ${S3_BUCKET:-test-media}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY:-minioadmin}
      S3_SECRET_KEY: ${S3_SECRET_KEY:-minioadmin}
      S3_REGION: ${S3_REGION:-us-east-1}
      S3_USE_PATH_STYLE: ${S3_USE_PATH_STYLE:-true}
      S3_PUBLIC_BASE_URL: ${S3_PUBLIC_BASE_URL:-/s3/test-media}
      # Опционально: если API читает BOT_* из окружения
      BOT_TOKEN: ${BOT_BOT_TOKEN:-}
      ADMIN_IDS: ${BOT_ADMIN_IDS:-}
    # миграции могут стартовать параллельно; API сам будет ретраить коннект к БД
    networks: [apps-net]
    restart: unless-stopped
    ports:
      - "8001:8000"
    command: ["uvicorn", "api.app.main:app", "--host", "0.0.0.0", "--port", "8000", "--log-level", "debug"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 10s
      timeout: 5s
      retries: 10

  migrator:
    build:
      context: ..
      dockerfile: api/Dockerfile
    environment:
      DATABASE_URL: postgresql+psycopg://postgres:postgres@db:5432/tests_for_users
    networks: [apps-net]
    # Запускаем миграции и выходим
    command: ["alembic", "upgrade", "head"]

  bot:
    build:
      context: ../bot
      dockerfile: Dockerfile
    env_file:
      - ./.env
    environment:
      BOT_BOT_TOKEN: ${BOT_BOT_TOKEN:-}
      BOT_ADMIN_IDS: ${BOT_ADMIN_IDS:-[]}
      BOT_API_BASE_URL: http://api:8000/api/v1
      # ВАЖНО: внешний адрес твоего webapp (порт см. ниже)
      BOT_WEBAPP_URL: ${BOT_WEBAPP_URL:-http://localhost:8081}
    networks: [apps-net]
    depends_on:
      api:
        condition: service_started
    restart: unless-stopped

  webapp:
    build:
      context: ../webapp
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-/api/v1}
        VITE_BOT_USERNAME: ${VITE_BOT_USERNAME:-your_bot_username}
        NGINX_CONF_VERSION: ${NGINX_CONF_VERSION:-20251005-1}
    networks: [apps-net]
    depends_on:
      api:
        condition: service_started
    restart: unless-stopped
    ports:
      - "8081:80"

networks:
  apps-net:
    external: true
